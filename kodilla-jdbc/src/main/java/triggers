CREATE TABLE BOOKS_AUD (
                           EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                           EVENT_DATE DATETIME NOT NULL,
                           EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                           BOOK_ID INT(11) NOT NULL,
                           OLD_TITLE VARCHAR(255),
                           NEW_TITLE VARCHAR(255),
                           OLD_PUBYEAR INT(11),
                           NEW_PUBYEAR INT(11),
                           OLD_BESTSELLER TINYINT,
                           NEW_BESTSELLER TINYINT,
                           PRIMARY KEY (EVENT_ID)
);

DELIMITER $$

CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON BOOKS                                        -- [1]
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER)                                -- [3]
        VALUE(CURTIME(), 'INSERT', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);                                                            -- [5]
END $$;

DELIMITER ;
SELECT * FROM BOOKS_AUD;

INSERT INTO BOOKS(TITLE, PUBYEAR, BESTSELLER) VALUES ('Gone With The Wind', 1998, NULL);
SELECT * FROM BOOKS_AUD;

DELIMITER $$

CREATE TRIGGER BOOKS_DELETE AFTER DELETE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID)
        VALUE(CURTIME(), 'DELETE', OLD.BOOK_ID);
END $$

DELIMITER ;

DELETE FROM BOOKS WHERE BOOK_ID = 21;
SELECT * FROM BOOKS_AUD;

DELIMITER $$

CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER, OLD_TITLE, OLD_PUBYEAR, OLD_BESTSELLER)
        VALUE(CURTIME(), 'UPDATE', OLD.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER, OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER);
END $$;

DELIMITER ;

UPDATE BOOKS SET PUBYEAR = 1999 WHERE BOOK_ID = 5;
SELECT * FROM BOOKS_AUD;

CREATE TABLE READERS_AUD (
                           EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                           EVENT_DATE DATETIME NOT NULL,
                           EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                           READER_ID INT(11) NOT NULL,
                           OLD_FIRSTNAME VARCHAR(255),
                           NEW_FIRSTNAME VARCHAR(255),
                           OLD_LASTNAME VARCHAR(255),
                           NEW_LASTNAME VARCHAR(255),
                           OLD_PESELID VARCHAR(11),
                           NEW_PESELID VARCHAR(11),
                           OLD_VIP_LEVEL VARCHAR(20),
                           NEW_VIP_LEVEL VARCHAR(20),
                           PRIMARY KEY (EVENT_ID)
);

DELIMITER $$

CREATE TRIGGER READERS_INSERT AFTER INSERT ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL)                                -- [3]
        VALUE(CURTIME(), 'INSERT', NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);
END $$;

DELIMITER ;
SELECT * FROM READERS_AUD;

INSERT INTO READERS(FIRSTNAME, LASTNAME, PESELID, VIP_LEVEL) VALUES ('Anna', 'Kowalska', 78052492164, null);
SELECT * FROM READERS_AUD;

DELIMITER $$
CREATE TRIGGER READERS_DELETE AFTER DELETE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
        VALUE(CURTIME(), 'DELETE', OLD.READER_ID);
END $$

DELIMITER ;

DELETE FROM READERS WHERE READER_ID = 12;
SELECT * FROM READERS_AUD;

DELIMITER $$
CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL, OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID, OLD_VIP_LEVEL)
        VALUE(CURTIME(), 'UPDATE', OLD.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL, OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, OLD_VIP_LEVEL);
END $$

DELIMITER ;

UPDATE READERS SET LASTNAME = 'Falton' WHERE READER_ID = 5;
SELECT * FROM READERS_AUD;